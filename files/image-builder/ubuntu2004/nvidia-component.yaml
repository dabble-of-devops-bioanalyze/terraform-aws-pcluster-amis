# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
name: Cuda
description: |
  Supplies nvidia-smi

schemaVersion: 1.0
phases:
  - name: build
    steps:
      - name: Fail
        action: ExecuteBash
        inputs:
          commands:
            - echo 1
      - name: OperatingSystemRelease
        action: ExecuteBash
        inputs:
          commands:
            - |
              FILE=/etc/os-release
              if [ -e $FILE ]; then
                . $FILE
                echo "$ID${VERSION_ID:+.${VERSION_ID}}"
              else
                echo "The file $FILE does not exist. Failing build."
                exit {{ build.Fail.outputs.stdout }}
              fi

      - name: InstallationRequirements
        action: ExecuteBash
        inputs:
          commands:
            - |
              RELEASE='{{ build.OperatingSystemRelease.outputs.stdout }}'

              export DEBIAN_FRONTEND=noninteractive
              ################################################
              # Install NVidia
              ################################################

              export TASK="NVidia Drivers"
              echo "===================================================="
              echo "# Starting: ${TASK}"
              echo "===================================================="


              wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
              sudo mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
              wget https://developer.download.nvidia.com/compute/cuda/11.7.0/local_installers/cuda-repo-ubuntu2004-11-7-local_11.7.0-515.43.04-1_amd64.deb
              sudo dpkg -i cuda-repo-ubuntu2004-11-7-local_11.7.0-515.43.04-1_amd64.deb
              sudo cp /var/cuda-repo-ubuntu2004-11-7-local/cuda-*-keyring.gpg /usr/share/keyrings/
              sudo apt-get update

              # NVIDIA DRIVER 5.2.5
              # sudo apt-get install -y nvidia-driver-525
              sudo apt-get -y install cuda nvidia-driver-525 nvidia-cuda-dev nvidia-cuda-toolkit


  # this installs the latest version - 12
  #              wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb
  #              sudo dpkg -i cuda-keyring_1.0-1_all.deb
  #              sudo apt-get update
  #              sudo apt-get -y install cuda nvidia-cuda-dev nvidia-cuda-toolkit


  - name: validate
    steps:
      - name: ValidateNvidia
        action: ExecuteBash
        inputs:
          commands:
            - |
              # TODO Validate nvidia driver
              # /usr/bin/nvidia-smi
              if type -P nvidia-smi &>/dev/null; then
                  echo "The nvidia-smi command exists."
              else
                  echo "The nvidia command does not exist. Failing."
                  exit 1
              fi
